[{"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/index.tsx":"1","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/reportWebVitals.ts":"2","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/App.tsx":"3","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/ChangeType.tsx":"4","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/TwoDice.tsx":"5","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/Counter.tsx":"6","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/CycleHoliday.tsx":"7","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/StartAttempt.tsx":"8","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/RevealAnswer.tsx":"9","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/ColoredBox.tsx":"10","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/DoubleHalf.tsx":"11","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/ChooseTeam.tsx":"12","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/ShoveBox.tsx":"13","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/ChangeColor.tsx":"14","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/MultipleChoiceQuestion.tsx":"15","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/CheckAnswer.tsx":"16","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/EditMode.tsx":"17","/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/GiveAttempts.tsx":"18","/Users/jasonhensley/Desktop/Class/CISC275/quizzer-solved/src/index.tsx":"19","/Users/jasonhensley/Desktop/Class/CISC275/quizzer-solved/src/reportWebVitals.ts":"20","/Users/jasonhensley/Desktop/Class/CISC275/quizzer-solved/src/App.tsx":"21","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/index.tsx":"22","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/reportWebVitals.ts":"23","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/App.tsx":"24","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/Quizzer.tsx":"25","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizList.tsx":"26","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/AddQuizModal.tsx":"27","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizView.tsx":"28","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizCard.tsx":"29","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizExpanded.tsx":"30","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizEdit.tsx":"31","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizQuestion.tsx":"32","/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuestionEdit.tsx":"33"},{"size":552,"mtime":1662074215503,"results":"34","hashOfConfig":"35"},{"size":519,"mtime":1662074215503,"results":"36","hashOfConfig":"35"},{"size":4789,"mtime":1666066052406,"results":"37","hashOfConfig":"38"},{"size":742,"mtime":1664996949597,"results":"39","hashOfConfig":"38"},{"size":1316,"mtime":1664996949600,"results":"40","hashOfConfig":"38"},{"size":326,"mtime":1664936648653,"results":"41","hashOfConfig":"38"},{"size":1932,"mtime":1664996949598,"results":"42","hashOfConfig":"38"},{"size":943,"mtime":1664996949599,"results":"43","hashOfConfig":"38"},{"size":422,"mtime":1664996949599,"results":"44","hashOfConfig":"38"},{"size":1546,"mtime":1665019526894,"results":"45","hashOfConfig":"38"},{"size":893,"mtime":1665014647413,"results":"46","hashOfConfig":"38"},{"size":2106,"mtime":1665170893873,"results":"47","hashOfConfig":"38"},{"size":1267,"mtime":1665020026153,"results":"48","hashOfConfig":"38"},{"size":1190,"mtime":1665869163431,"results":"49","hashOfConfig":"38"},{"size":1027,"mtime":1665869633718,"results":"50","hashOfConfig":"38"},{"size":929,"mtime":1665187581688,"results":"51","hashOfConfig":"38"},{"size":2573,"mtime":1665864475369,"results":"52","hashOfConfig":"38"},{"size":2612,"mtime":1665202376860,"results":"53","hashOfConfig":"38"},{"size":552,"mtime":1666124056210,"results":"54","hashOfConfig":"55"},{"size":519,"mtime":1666124056215,"results":"56","hashOfConfig":"55"},{"size":856,"mtime":1666124721595,"results":"57","hashOfConfig":"55"},{"size":552,"mtime":1666151095274,"results":"58","hashOfConfig":"59"},{"size":519,"mtime":1666151095280,"results":"60","hashOfConfig":"59"},{"size":856,"mtime":1666151095274,"results":"61","hashOfConfig":"59"},{"size":4133,"mtime":1666150740877,"results":"62","hashOfConfig":"59"},{"size":1782,"mtime":1666150732639,"results":"63","hashOfConfig":"59"},{"size":2383,"mtime":1666150899994,"results":"64","hashOfConfig":"59"},{"size":1203,"mtime":1666193282066,"results":"65","hashOfConfig":"59"},{"size":1057,"mtime":1666144899310,"results":"66","hashOfConfig":"59"},{"size":3787,"mtime":1666148378954,"results":"67","hashOfConfig":"59"},{"size":6405,"mtime":1666203491388,"results":"68","hashOfConfig":"59"},{"size":3432,"mtime":1666200672277,"results":"69","hashOfConfig":"59"},{"size":11411,"mtime":1666203831850,"results":"70","hashOfConfig":"59"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"ng5wwt",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wmzyoz",{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h0l04x",{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h2ij09",{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/index.tsx",[],[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/reportWebVitals.ts",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/App.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/ChangeType.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/TwoDice.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/Counter.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/CycleHoliday.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/StartAttempt.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/RevealAnswer.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/ColoredBox.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/DoubleHalf.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/ChooseTeam.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/ShoveBox.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/ChangeColor.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/MultipleChoiceQuestion.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/CheckAnswer.tsx",[],[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/EditMode.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/GiveAttempts.tsx",[],[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer-solved/src/index.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer-solved/src/reportWebVitals.ts",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer-solved/src/App.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/index.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/reportWebVitals.ts",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/App.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/Quizzer.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizList.tsx",["142"],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/AddQuizModal.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizView.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizCard.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizExpanded.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizEdit.tsx",[],["143","144"],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuizQuestion.tsx",[],"/Users/jasonhensley/Desktop/Class/CISC275/quizzer_start/src/quizzer/QuestionEdit.tsx",["145"],"import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Question, QuestionType } from \"../interfaces/question\";\n\nimport \"./QuestionEdit.css\";\n\ninterface questionEditInterface {\n    index: number,\n    lastIndex: number,\n    question: Question,\n    editQuestion: (questionId: number, newQuestion: Question) => void,\n    removeQuestion: (questionId: number) => void,\n    swapQuestion: (idx1: number, idx2: number) => void,\n}\n\nexport const QuestionEdit = ({\n    index,\n    lastIndex,\n    question,\n    editQuestion,\n    removeQuestion,\n    swapQuestion\n}: questionEditInterface) => {\n    const [a, b] = useState<number>(\n        question.options.findIndex((s: string) => question.expected === s)\n    );\n\n    const handleNumOptions = (e: React.ChangeEvent<HTMLInputElement>) => {\n        b(0);\n        const newNum =\n            parseInt(e.target.value) < 1 ? 1 : parseInt(e.target.value);\n        editQuestion(question.id, {\n            ...question,\n            type: \"multiple_choice_question\",\n            expected: \"Example Answer\",\n            options: Array(newNum).fill(\"Example Answer\")\n        });\n    };\n\n    const switchMulti = () => {\n        b(0);\n        editQuestion(question.id, {\n            ...question,\n            type: \"multiple_choice_question\",\n            expected: \"Example Answer\",\n            options: Array(3).fill(\"Example Answer\")\n        });\n    };\n\n    const handlePoints = (e: React.ChangeEvent<HTMLInputElement>) => {\n    \tquestion.points = parseInt(e.target.value)\n        editQuestion(question.id, question);\n    };\n\n    const handleChoiceChange = (\n        e: React.ChangeEvent<HTMLInputElement>,\n        i: number\n    ) => {\n        const newOptions = [...question.options];\n        newOptions.splice(i, 1, e.target.value);\n        editQuestion(question.id, {\n            ...question,\n            options: newOptions,\n            expected: a === i ? e.target.value : question.expected\n        });\n    };\n\n    const handleRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const idx = parseInt(e.target.value);\n        b(idx);\n        editQuestion(question.id, {\n            ...question,\n            expected: question.options[idx]\n        });\n    };\n\n    return (\n        <>\n            <hr />\n            <div className=\"edit_question\">\n                <div className=\"edit_title_row\">\n                    <div className=\"edit_title_box\">\n                        <h1>{index + 1}. </h1>\n                        <Form.Group\n                            className=\"title_input\"\n                            controlId=\"editTitleFormId\"\n                        >\n                            <Form.Control\n                                value={question.body}\n                                data-testid=\"edit_question_title\"\n                                onChange={(\n                                    e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                    editQuestion(question.id, {\n                                        ...question,\n                                        body: e.target.value\n                                    });\n                                }}\n                            ></Form.Control>\n                        </Form.Group>\n                    </div>\n                    <div className=\"edit_title_box\">\n                        <Form.Group\n                            className=\"points_input\"\n                            controlId=\"editPointsFormId\"\n                        >\n                            <Form.Control\n                                value={question.points}\n                                type=\"number\"\n                                onChange={handlePoints}\n                            ></Form.Control>\n                        </Form.Group>\n                        <h4>pt{question.points !== 1 ? \"s\" : \"\"}</h4>\n                    </div>\n                </div>\n                <div className=\"center_section\">\n                    <div className=\"edit_answer_box\">\n                        <div className=\"type_form\">\n                            <Form.Group controlId=\"questionTypeFormId\">\n                                <Form.Label>Type: </Form.Label>\n                                <Form.Select\n                                    className=\"type_dropdown\"\n                                    value={question.type}\n                                    onChange={() => switchMulti()}\n                                >\n                                    <option\n                                        data-testid={\n                                            \"question_type_dropdown_\" + index\n                                        }\n                                        value=\"multiple_choice_question\"\n                                    >\n                                        Multiple Choice\n                                    </option>\n                                    <option\n                                        data-testid={\n                                            \"question_type_dropdown_\" + index\n                                        }\n                                        value=\"short_answer_question\"\n                                    >\n                                        Short Answer\n                                    </option>\n                                </Form.Select>\n                            </Form.Group>\n                            {question.type === \"multiple_choice_question\" && (\n                                <>\n                                    <Form.Group controlId=\"editNumChoicesId\">\n                                        <Form.Label>Choices: </Form.Label>\n                                        <Form.Control\n                                            className=\"num_choices\"\n                                            value={question.options.length}\n                                            type=\"number\"\n                                            onChange={handleNumOptions}\n                                        ></Form.Control>\n                                    </Form.Group>\n                                </>\n                            )}\n                        </div>\n                        <div>\n                            {question.type === \"short_answer_question\" && (\n                                <Form.Group controlId=\"formEditShortExpectedBox\">\n                                    <Form.Label>Answer:</Form.Label>\n                                    <Form.Control\n                                        value={question.expected}\n                                        onChange={(\n                                            e: React.ChangeEvent<HTMLInputElement>\n                                        ) => {\n                                            editQuestion(question.id, {\n                                                ...question,\n                                                expected: e.target.value\n                                            });\n                                        }}\n                                    ></Form.Control>\n                                </Form.Group>\n                            )}\n                            {question.type === \"multiple_choice_question\" && (\n                                <Form.Group controlId=\"formEditMultipleExpectedBox\">\n                                    <Form.Label>Answer:</Form.Label>\n                                    {question.options.map(\n                                        (option: string, i: number) => (\n                                            <div\n                                                key={i}\n                                                className=\"radio_question_box\"\n                                            >\n                                                <Form.Check\n                                                    type=\"radio\"\n                                                    name={\n                                                        \"questionChoice\" + index\n                                                    }\n                                                    value={i}\n                                                    checked={a === i}\n                                                    onChange={handleRadioChange}\n                                                />\n                                                <Form.Control\n                                                    name={\n                                                        \"questionChoice\" + index\n                                                    }\n                                                    value={option}\n                                                    onChange={(\n                                                        e: React.ChangeEvent<HTMLInputElement>\n                                                    ) => {\n                                                        handleChoiceChange(\n                                                            e,\n                                                            i\n                                                        );\n                                                    }}\n                                                ></Form.Control>\n                                            </div>\n                                        )\n                                    )}\n                                </Form.Group>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"swap_button_container\">\n                        <Button\n                            disabled={index === 0}\n                            className=\"swap_button\"\n                            onClick={() => swapQuestion(index, index - 1)}\n                        >\n                            ▲\n                        </Button>\n                        <Button\n                            disabled={index === lastIndex}\n                            className=\"swap_button\"\n                            onClick={() => swapQuestion(index, index + 1)}\n                        >\n                            ▼\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"edit_question_footer\">\n                    <Form.Check\n                        className=\"published_question_check\"\n                        data-testid=\"question_published_check\"\n                        type=\"checkbox\"\n                        id=\"is_question_published_check\"\n                        label=\"Published\"\n                        checked={question.published}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                            editQuestion(question.id, {\n                                ...question,\n                                published: e.target.checked\n                            });\n                        }}\n                    ></Form.Check>\n                    <Button\n                        variant=\"danger\"\n                        onClick={() => {\n                            removeQuestion(question.id);\n                        }}\n                    >\n                        Delete\n                    </Button>\n                </div>\n            </div>\n        </>\n    );\n};\n",{"ruleId":"146","severity":1,"message":"147","line":47,"column":39,"nodeType":"148","messageId":"149","endLine":47,"endColumn":41},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":3,"column":20,"nodeType":"156","messageId":"157","endLine":3,"endColumn":32},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["158"],"no-negated-in-lhs",["159"],"@typescript-eslint/no-unused-vars","'QuestionType' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]