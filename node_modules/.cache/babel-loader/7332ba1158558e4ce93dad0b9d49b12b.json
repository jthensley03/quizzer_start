{"ast":null,"code":"var _jsxFileName = \"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/ChooseTeam.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PEOPLE = [\"Alan Turing\", \"Grace Hopper\", \"Ada Lovelace\", \"Charles Babbage\", \"Barbara Liskov\", \"Margaret Hamilton\"];\n\nfunction ChooseMember(_ref, newMember) {\n  let {\n    setTeam,\n    team,\n    option\n  } = _ref;\n\n  if (!team.includes(newMember)) {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setTeam([...team, newMember]),\n      size: \"sm\",\n      children: [\" \", option]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setTeam(team),\n      size: \"sm\",\n      children: [\" \", option]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c = ChooseMember;\n\nfunction ClearTeam(_ref2) {\n  let {\n    setTeam\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => setTeam([]),\n    children: \"Clear Team\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = ClearTeam;\nexport function ChooseTeam() {\n  _s();\n\n  const [allOptions, setAllOptions] = useState(PEOPLE);\n  const [team, setTeam] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Choose Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: allOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"4px\"\n          },\n          children: [\"Add\", \" \", /*#__PURE__*/_jsxDEV(ChooseMember, {\n            setTeam: setTeam,\n            team: team,\n            setAllOption: setAllOptions,\n            option: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Team:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), team.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: member\n        }, member, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(ClearTeam, {\n          setTeam: setTeam,\n          team: team\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChooseTeam, \"1rNVdAHu69+LKXaSN43dB3GzHkY=\");\n\n_c3 = ChooseTeam;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ChooseMember\");\n$RefreshReg$(_c2, \"ClearTeam\");\n$RefreshReg$(_c3, \"ChooseTeam\");","map":{"version":3,"sources":["/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/ChooseTeam.tsx"],"names":["React","useState","Button","Row","Col","PEOPLE","ChooseMember","newMember","setTeam","team","option","includes","ClearTeam","ChooseTeam","allOptions","setAllOptions","map","marginBottom","member"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,QAAiC,iBAAjC;;AAEA,MAAMC,MAAM,GAAG,CACX,aADW,EAEX,cAFW,EAGX,cAHW,EAIX,iBAJW,EAKX,gBALW,EAMX,mBANW,CAAf;;AAqBA,SAASC,YAAT,OAEIC,SAFJ,EAGe;AAAA,MAFX;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAEW;;AACX,MAAI,CAACD,IAAI,CAACE,QAAL,CAAcJ,SAAd,CAAL,EAA+B;AAC3B,wBACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,CAAC,GAAGC,IAAJ,EAAUF,SAAV,CAAD,CAA9B;AAAsD,MAAA,IAAI,EAAC,IAA3D;AAAA,iBACK,GADL,EAEKG,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD,MAOO;AACH,wBACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACC,IAAD,CAA9B;AAAsC,MAAA,IAAI,EAAC,IAA3C;AAAA,iBACK,GADL,EAEKC,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;AACJ;;KAnBQJ,Y;;AAqBT,SAASM,SAAT,QAAwD;AAAA,MAArC;AAAEJ,IAAAA;AAAF,GAAqC;AACpD,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,EAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;MAFQI,S;AAIT,OAAO,SAASC,UAAT,GAAmC;AAAA;;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAWI,MAAX,CAA5C;AACA,QAAM,CAACI,IAAD,EAAOD,OAAP,IAAkBP,QAAQ,CAAW,EAAX,CAAhC;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AAAA,8BACI,QAAC,GAAD;AAAA,kBACKa,UAAU,CAACE,GAAX,CAAgBN,MAAD,iBACZ;AAAkB,UAAA,KAAK,EAAE;AAAEO,YAAAA,YAAY,EAAE;AAAhB,WAAzB;AAAA,4BACQ,GADR,eAEI,QAAC,YAAD;AACI,YAAA,OAAO,EAAET,OADb;AAEI,YAAA,IAAI,EAAEC,IAFV;AAGI,YAAA,YAAY,EAAEM,aAHlB;AAII,YAAA,MAAM,EAAEL;AAJZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI,QAAC,GAAD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKD,IAAI,CAACO,GAAL,CAAUE,MAAD,iBACN;AAAA,oBAAkBA;AAAlB,WAASA,MAAT;AAAA;AAAA;AAAA;AAAA,gBADH,CAFL,eAKI,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEV,OAApB;AAA6B,UAAA,IAAI,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA/BeI,U;;MAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nconst PEOPLE = [\n    \"Alan Turing\",\n    \"Grace Hopper\",\n    \"Ada Lovelace\",\n    \"Charles Babbage\",\n    \"Barbara Liskov\",\n    \"Margaret Hamilton\"\n];\n\ninterface teamProps {\n    setTeam: (newTeam: string[]) => void;\n    team: string[];\n}\n\ninterface chooseProps {\n    setTeam: (newTeam: string[]) => void;\n    team: string[];\n    setAllOption: (newOption: string[]) => void;\n    option: string;\n}\n\nfunction ChooseMember(\n    { setTeam, team, option }: chooseProps,\n    newMember: string\n): JSX.Element {\n    if (!team.includes(newMember)) {\n        return (\n            <Button onClick={() => setTeam([...team, newMember])} size=\"sm\">\n                {\" \"}\n                {option}\n            </Button>\n        );\n    } else {\n        return (\n            <Button onClick={() => setTeam(team)} size=\"sm\">\n                {\" \"}\n                {option}\n            </Button>\n        );\n    }\n}\n\nfunction ClearTeam({ setTeam }: teamProps): JSX.Element {\n    return <Button onClick={() => setTeam([])}>Clear Team</Button>;\n}\n\nexport function ChooseTeam(): JSX.Element {\n    const [allOptions, setAllOptions] = useState<string[]>(PEOPLE);\n    const [team, setTeam] = useState<string[]>([]);\n\n    return (\n        <div>\n            <h3>Choose Team</h3>\n            <Row>\n                <Col>\n                    {allOptions.map((option: string) => (\n                        <div key={option} style={{ marginBottom: \"4px\" }}>\n                            Add{\" \"}\n                            <ChooseMember\n                                setTeam={setTeam}\n                                team={team}\n                                setAllOption={setAllOptions}\n                                option={option}\n                            ></ChooseMember>\n                        </div>\n                    ))}\n                </Col>\n                <Col>\n                    <strong>Team:</strong>\n                    {team.map((member: string) => (\n                        <li key={member}>{member}</li>\n                    ))}\n                    <ClearTeam setTeam={setTeam} team={team}></ClearTeam>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}