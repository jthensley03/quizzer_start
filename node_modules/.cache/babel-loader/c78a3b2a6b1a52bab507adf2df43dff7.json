{"ast":null,"code":"var _jsxFileName = \"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/GiveAttempts.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UseButton(_ref) {\n  let {\n    setAttemptsLeft,\n    attemptsLeft\n  } = _ref;\n  let dis = false;\n\n  if (attemptsLeft < 1) {\n    dis = true;\n    setAttemptsLeft(0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => setAttemptsLeft(attemptsLeft - 1),\n    disabled: dis,\n    children: \"Use\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_c = UseButton;\n\nfunction GainCallback(_ref2) {\n  let {\n    setAttemptsLeft,\n    attemptsLeft,\n    setAttemptsReq,\n    attemptsReq\n  } = _ref2;\n  setAttemptsLeft(attemptsLeft + attemptsReq);\n  setAttemptsReq(0);\n}\n\n_c2 = GainCallback;\n\nfunction GainButton(_ref3) {\n  let {\n    setAttemptsLeft,\n    attemptsLeft,\n    setAttemptsReq,\n    attemptsReq\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => GainCallback({\n      setAttemptsLeft,\n      attemptsLeft,\n      setAttemptsReq,\n      attemptsReq\n    }),\n    children: \"Gain\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = GainButton;\nexport function GiveAttempts() {\n  _s();\n\n  const [attemptsLeft, setAttemptsLeft] = useState(3);\n  const [attemptsReq, setAttemptsReq] = useState(0);\n\n  function parseAttemptsReq(reqStr) {\n    setAttemptsReq(parseInt(reqStr) || 0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Give Attempts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formAttemptsRequested\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Attempt Request:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"number\",\n        value: attemptsReq,\n        onChange: event => parseAttemptsReq(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Attempts Left: \", attemptsLeft]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UseButton, {\n      setAttemptsLeft: setAttemptsLeft,\n      attemptsLeft: attemptsLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GainButton, {\n      setAttemptsLeft: setAttemptsLeft,\n      attemptsLeft: attemptsLeft,\n      setAttemptsReq: setAttemptsReq,\n      attemptsReq: attemptsReq\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GiveAttempts, \"JIspLB+s2HTWXSgDlqHRzeNNwlw=\");\n\n_c4 = GiveAttempts;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"UseButton\");\n$RefreshReg$(_c2, \"GainCallback\");\n$RefreshReg$(_c3, \"GainButton\");\n$RefreshReg$(_c4, \"GiveAttempts\");","map":{"version":3,"sources":["/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/GiveAttempts.tsx"],"names":["React","useState","Button","Form","UseButton","setAttemptsLeft","attemptsLeft","dis","GainCallback","setAttemptsReq","attemptsReq","GainButton","GiveAttempts","parseAttemptsReq","reqStr","parseInt","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;;;AAcA,SAASC,SAAT,OAA6E;AAAA,MAA1D;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAA0D;AACzE,MAAIC,GAAG,GAAG,KAAV;;AACA,MAAID,YAAY,GAAG,CAAnB,EAAsB;AAClBC,IAAAA,GAAG,GAAG,IAAN;AACAF,IAAAA,eAAe,CAAC,CAAD,CAAf;AACH;;AACD,sBACI,QAAC,MAAD;AACI,IAAA,OAAO,EAAE,MAAMA,eAAe,CAACC,YAAY,GAAG,CAAhB,CADlC;AAEI,IAAA,QAAQ,EAAEC,GAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KAdQH,S;;AAgBT,SAASI,YAAT,QAKc;AAAA,MALQ;AAClBH,IAAAA,eADkB;AAElBC,IAAAA,YAFkB;AAGlBG,IAAAA,cAHkB;AAIlBC,IAAAA;AAJkB,GAKR;AACVL,EAAAA,eAAe,CAACC,YAAY,GAAGI,WAAhB,CAAf;AACAD,EAAAA,cAAc,CAAC,CAAD,CAAd;AACH;;MARQD,Y;;AAUT,SAASG,UAAT,QAK2B;AAAA,MALP;AAChBN,IAAAA,eADgB;AAEhBC,IAAAA,YAFgB;AAGhBG,IAAAA,cAHgB;AAIhBC,IAAAA;AAJgB,GAKO;AACvB,sBACI,QAAC,MAAD;AACI,IAAA,OAAO,EAAE,MACLF,YAAY,CAAC;AACTH,MAAAA,eADS;AAETC,MAAAA,YAFS;AAGTG,MAAAA,cAHS;AAITC,MAAAA;AAJS,KAAD,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;MApBQC,U;AAsBT,OAAO,SAASC,YAAT,GAAqC;AAAA;;AACxC,QAAM,CAACN,YAAD,EAAeD,eAAf,IAAkCJ,QAAQ,CAAS,CAAT,CAAhD;AACA,QAAM,CAACS,WAAD,EAAcD,cAAd,IAAgCR,QAAQ,CAAS,CAAT,CAA9C;;AAEA,WAASY,gBAAT,CAA0BC,MAA1B,EAA0C;AACtCL,IAAAA,cAAc,CAACM,QAAQ,CAACD,MAAD,CAAR,IAAoB,CAArB,CAAd;AACH;;AACD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,uBAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,KAAK,EAAEJ,WAFX;AAGI,QAAA,QAAQ,EAAGM,KAAD,IACNH,gBAAgB,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd;AAJxB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI;AAAA,oCAAqBZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI,QAAC,SAAD;AACI,MAAA,eAAe,EAAED,eADrB;AAEI,MAAA,YAAY,EAAEC;AAFlB;AAAA;AAAA;AAAA;AAAA,YAbJ,eAiBI,QAAC,UAAD;AACI,MAAA,eAAe,EAAED,eADrB;AAEI,MAAA,YAAY,EAAEC,YAFlB;AAGI,MAAA,cAAc,EAAEG,cAHpB;AAII,MAAA,WAAW,EAAEC;AAJjB;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAjCeE,Y;;MAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\ninterface useProps {\n    setAttemptsLeft: (newTeam: number) => void;\n    attemptsLeft: number;\n}\n\ninterface gainProps {\n    setAttemptsLeft: (newTeam: number) => void;\n    attemptsLeft: number;\n    setAttemptsReq: (newTeam: number) => void;\n    attemptsReq: number;\n}\n\nfunction UseButton({ setAttemptsLeft, attemptsLeft }: useProps): JSX.Element {\n    let dis = false;\n    if (attemptsLeft < 1) {\n        dis = true;\n        setAttemptsLeft(0);\n    }\n    return (\n        <Button\n            onClick={() => setAttemptsLeft(attemptsLeft - 1)}\n            disabled={dis}\n        >\n            Use\n        </Button>\n    );\n}\n\nfunction GainCallback({\n    setAttemptsLeft,\n    attemptsLeft,\n    setAttemptsReq,\n    attemptsReq\n}: gainProps) {\n    setAttemptsLeft(attemptsLeft + attemptsReq);\n    setAttemptsReq(0);\n}\n\nfunction GainButton({\n    setAttemptsLeft,\n    attemptsLeft,\n    setAttemptsReq,\n    attemptsReq\n}: gainProps): JSX.Element {\n    return (\n        <Button\n            onClick={() =>\n                GainCallback({\n                    setAttemptsLeft,\n                    attemptsLeft,\n                    setAttemptsReq,\n                    attemptsReq\n                })\n            }\n        >\n            Gain\n        </Button>\n    );\n}\n\nexport function GiveAttempts(): JSX.Element {\n    const [attemptsLeft, setAttemptsLeft] = useState<number>(3);\n    const [attemptsReq, setAttemptsReq] = useState<number>(0);\n\n    function parseAttemptsReq(reqStr: string) {\n        setAttemptsReq(parseInt(reqStr) || 0);\n    }\n    return (\n        <div>\n            <h3>Give Attempts</h3>\n            <Form.Group controlId=\"formAttemptsRequested\">\n                <Form.Label>Attempt Request:</Form.Label>\n                <Form.Control\n                    type=\"number\"\n                    value={attemptsReq}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                        parseAttemptsReq(event.target.value)\n                    }\n                />\n            </Form.Group>\n            <div>Attempts Left: {attemptsLeft}</div>\n            <UseButton\n                setAttemptsLeft={setAttemptsLeft}\n                attemptsLeft={attemptsLeft}\n            ></UseButton>\n            <GainButton\n                setAttemptsLeft={setAttemptsLeft}\n                attemptsLeft={attemptsLeft}\n                setAttemptsReq={setAttemptsReq}\n                attemptsReq={attemptsReq}\n            ></GainButton>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}