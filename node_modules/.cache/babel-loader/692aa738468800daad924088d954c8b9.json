{"ast":null,"code":"var _jsxFileName = \"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/ChooseTeam.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PEOPLE = [\"Alan Turing\", \"Grace Hopper\", \"Ada Lovelace\", \"Charles Babbage\", \"Barbara Liskov\", \"Margaret Hamilton\"];\nexport function ChooseTeam() {\n  _s();\n\n  const [allOptions, setAllOptions] = useState(PEOPLE);\n  const [team, setTeam] = useState([]);\n\n  function ChooseMember(_ref) {\n    let {\n      setTeam,\n      team,\n      option\n    } = _ref;\n\n    /* if (!team.includes(option)) { */\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setTeam([...team, option]),\n      size: \"sm\",\n      children: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n    /*} else {\n        return (\n            <Button onClick={() => setTeam([...team])} size=\"sm\">\n                {option}\n            </Button>\n        );\n    } */\n  }\n\n  function ClearTeam(_ref2) {\n    let {\n      setTeam\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setTeam([]),\n      children: \"Clear Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  console.log(team);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Choose Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: allOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"4px\"\n          },\n          children: [\"Add\", \" \", /*#__PURE__*/_jsxDEV(ChooseMember, {\n            setTeam: setTeam,\n            team: team,\n            option: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Team:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), team.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: member\n        }, member, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(ClearTeam, {\n          setTeam: setTeam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChooseTeam, \"1rNVdAHu69+LKXaSN43dB3GzHkY=\");\n\n_c = ChooseTeam;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseTeam\");","map":{"version":3,"sources":["/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/bad-components/ChooseTeam.tsx"],"names":["React","useState","Button","Row","Col","PEOPLE","ChooseTeam","allOptions","setAllOptions","team","setTeam","ChooseMember","option","ClearTeam","console","log","map","marginBottom","member"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,QAAiC,iBAAjC;;AAEA,MAAMC,MAAM,GAAG,CACX,aADW,EAEX,cAFW,EAGX,cAHW,EAIX,iBAJW,EAKX,gBALW,EAMX,mBANW,CAAf;AAmBA,OAAO,SAASC,UAAT,GAAmC;AAAA;;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAWI,MAAX,CAA5C;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAW,EAAX,CAAhC;;AAEA,WAASU,YAAT,OAA2E;AAAA,QAArD;AAAED,MAAAA,OAAF;AAAWD,MAAAA,IAAX;AAAiBG,MAAAA;AAAjB,KAAqD;;AACvE;AACA,wBACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMF,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUG,MAAV,CAAD,CAA9B;AAAmD,MAAA,IAAI,EAAC,IAAxD;AAAA,gBACKA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKA;AACR;AACA;AACA;AACA;AACA;AACA;AACK;;AAED,WAASC,SAAT,QAAyD;AAAA,QAAtC;AAAEH,MAAAA;AAAF,KAAsC;AACrD,wBAAO,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,EAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AAAA,8BACI,QAAC,GAAD;AAAA,kBACKF,UAAU,CAACS,GAAX,CAAgBJ,MAAD,iBACZ;AAAkB,UAAA,KAAK,EAAE;AAAEK,YAAAA,YAAY,EAAE;AAAhB,WAAzB;AAAA,4BACQ,GADR,eAEI,QAAC,YAAD;AACI,YAAA,OAAO,EAAEP,OADb;AAEI,YAAA,IAAI,EAAED,IAFV;AAGI,YAAA,MAAM,EAAEG;AAHZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI,QAAC,GAAD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKH,IAAI,CAACO,GAAL,CAAUE,MAAD,iBACN;AAAA,oBAAkBA;AAAlB,WAASA,MAAT;AAAA;AAAA;AAAA;AAAA,gBADH,CAFL,eAKI,QAAC,SAAD;AAAW,UAAA,OAAO,EAAER;AAApB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAnDeJ,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nconst PEOPLE = [\n    \"Alan Turing\",\n    \"Grace Hopper\",\n    \"Ada Lovelace\",\n    \"Charles Babbage\",\n    \"Barbara Liskov\",\n    \"Margaret Hamilton\"\n];\n\ninterface memberProps {\n    setTeam: (newTeam: string[]) => void;\n    team: string[];\n    option: string;\n}\n\ninterface clearProps {\n    setTeam: (newTeam: string[]) => void;\n}\n\nexport function ChooseTeam(): JSX.Element {\n    const [allOptions, setAllOptions] = useState<string[]>(PEOPLE);\n    const [team, setTeam] = useState<string[]>([]);\n\n    function ChooseMember({ setTeam, team, option }: memberProps): JSX.Element {\n        /* if (!team.includes(option)) { */\n        return (\n            <Button onClick={() => setTeam([...team, option])} size=\"sm\">\n                {option}\n            </Button>\n        );\n        /*} else {\n            return (\n                <Button onClick={() => setTeam([...team])} size=\"sm\">\n                    {option}\n                </Button>\n            );\n        } */\n    }\n\n    function ClearTeam({ setTeam }: clearProps): JSX.Element {\n        return <Button onClick={() => setTeam([])}>Clear Team</Button>;\n    }\n\n    console.log(team);\n    return (\n        <div>\n            <h3>Choose Team</h3>\n            <Row>\n                <Col>\n                    {allOptions.map((option: string) => (\n                        <div key={option} style={{ marginBottom: \"4px\" }}>\n                            Add{\" \"}\n                            <ChooseMember\n                                setTeam={setTeam}\n                                team={team}\n                                option={option}\n                            ></ChooseMember>\n                        </div>\n                    ))}\n                </Col>\n                <Col>\n                    <strong>Team:</strong>\n                    {team.map((member: string) => (\n                        <li key={member}>{member}</li>\n                    ))}\n                    <ClearTeam setTeam={setTeam}></ClearTeam>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}