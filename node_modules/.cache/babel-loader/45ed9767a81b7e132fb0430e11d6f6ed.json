{"ast":null,"code":"var _jsxFileName = \"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/EditMode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditMode() {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [boolStudent, setBoolStudent] = useState(true);\n  const [name, setName] = useState(\"Your Name\");\n\n  function updateEditMode(editMode) {\n    setEditMode(!editMode);\n  }\n\n  function updateName(event) {\n    setName(event.target.value);\n  }\n\n  function updateBoolStudent() {\n    setBoolStudent(!boolStudent);\n  }\n\n  function OutputString(name, boolStudent) {\n    let ret = \"\";\n\n    if (boolStudent === true) {\n      ret = \"is a student\";\n    } else {\n      ret = \"is not a student\";\n    }\n\n    return ret;\n  }\n\n  if (editMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Switch, {\n        id: \"editModeSwitch\",\n        label: \"Edit Mode\",\n        checked: editMode,\n        onChange: () => updateEditMode(editMode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"editStuff\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"textbox\",\n            value: name,\n            placeholder: \"Your Name\",\n            onChange: updateName,\n            disabled: !editMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          id: \"is-student-check\",\n          label: \"Student?\",\n          checked: boolStudent,\n          onChange: updateBoolStudent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"disp\",\n        children: name + \" \" + OutputString(name, boolStudent)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Switch, {\n        id: \"editModeSwitch\",\n        label: \"Edit Mode\",\n        checked: editMode,\n        onChange: () => updateEditMode(editMode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"disp\",\n        children: name + \" \" + OutputString(name, boolStudent)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(EditMode, \"dmDGRkCQFJuEnLIydSbpSN9MHqE=\");\n\n_c = EditMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMode\");","map":{"version":3,"sources":["/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/EditMode.tsx"],"names":["React","useState","Form","EditMode","editMode","setEditMode","boolStudent","setBoolStudent","name","setName","updateEditMode","updateName","event","target","value","updateBoolStudent","OutputString","ret"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport function EditMode(): JSX.Element {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const [boolStudent, setBoolStudent] = useState<boolean>(true);\n    const [name, setName] = useState<string>(\"Your Name\");\n\n    function updateEditMode(editMode: boolean) {\n        setEditMode(!editMode);\n    }\n\n    function updateName(event: React.ChangeEvent<HTMLInputElement>) {\n        setName(event.target.value);\n    }\n\n    function updateBoolStudent() {\n        setBoolStudent(!boolStudent);\n    }\n\n    function OutputString(name: string, boolStudent: boolean): string {\n        let ret = \"\";\n        if (boolStudent === true) {\n            ret = \"is a student\";\n        } else {\n            ret = \"is not a student\";\n        }\n        return ret;\n    }\n    if (editMode) {\n        return (\n            <div>\n                <h3>Edit Mode</h3>\n                <Form.Switch\n                    id=\"editModeSwitch\"\n                    label=\"Edit Mode\"\n                    checked={editMode}\n                    onChange={() => updateEditMode(editMode)}\n                />\n                <div id=\"editStuff\">\n                    <Form.Group controlId=\"formName\">\n                        <Form.Label>Name:</Form.Label>\n                        <Form.Control\n                            type=\"textbox\"\n                            value={name}\n                            placeholder=\"Your Name\"\n                            onChange={updateName}\n                            disabled={!editMode}\n                        />\n                    </Form.Group>\n                    <Form.Check\n                        type=\"checkbox\"\n                        id=\"is-student-check\"\n                        label=\"Student?\"\n                        checked={boolStudent}\n                        onChange={updateBoolStudent}\n                    />\n                </div>\n                <div id=\"disp\">\n                    {name + \" \" + OutputString(name, boolStudent)}\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <h3>Edit Mode</h3>\n                <Form.Switch\n                    id=\"editModeSwitch\"\n                    label=\"Edit Mode\"\n                    checked={editMode}\n                    onChange={() => updateEditMode(editMode)}\n                />\n                <div id=\"disp\">\n                    {name + \" \" + OutputString(name, boolStudent)}\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}