{"ast":null,"code":"var _jsxFileName = \"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/RevealAnswer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RevealAnswer() {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n\n  function flipVisibility() {\n    setVisible(!visible);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: flipVisibility,\n      children: \"Reveal Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"42\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RevealAnswer, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = RevealAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevealAnswer\");","map":{"version":3,"sources":["/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/components/RevealAnswer.tsx"],"names":["React","useState","Button","RevealAnswer","visible","setVisible","flipVisibility"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,OAAO,SAASC,YAAT,GAAqC;AAAA;;AACxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAU,KAAV,CAAtC;;AACA,WAASK,cAAT,GAAgC;AAC5BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH;;AACD,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAXeD,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport function RevealAnswer(): JSX.Element {\n    const [visible, setVisible] = useState<boolean>(false);\n    function flipVisibility(): void {\n        setVisible(!visible);\n    }\n    return (\n        <div>\n            <Button onClick={flipVisibility}>Reveal Answer</Button>\n            {visible && <div>42</div>}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}