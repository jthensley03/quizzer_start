{"ast":null,"code":"var _jsxFileName = \"/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/CheckAnswer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CheckAnswer(_ref) {\n  _s();\n\n  let {\n    expectedAnswer\n  } = _ref;\n  const [answer, setAnswer] = useState(\"\");\n\n  function updateAnswer(event) {\n    setAnswer(event.target.value);\n  }\n\n  function checkAnswer(answer, expectedAnswer) {\n    let ret = \"\";\n\n    if (answer === expectedAnswer) {\n      ret = \"✔️\";\n    } else {\n      ret = \"❌\";\n    }\n\n    return ret;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Check Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), checkAnswer(answer, expectedAnswer)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckAnswer, \"nLE+xPgtaAaLwlMs7GM3CI4lZyQ=\");\n\n_c = CheckAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckAnswer\");","map":{"version":3,"sources":["/Users/jasonhensley/Desktop/Class/CISC275/tasks/src/form-components/CheckAnswer.tsx"],"names":["React","useState","CheckAnswer","expectedAnswer","answer","setAnswer","updateAnswer","event","target","value","checkAnswer","ret"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,SAASC,WAAT,OAIS;AAAA;;AAAA,MAJY;AACxBC,IAAAA;AADwB,GAIZ;AACZ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAS,EAAT,CAApC;;AAEA,WAASK,YAAT,CAAsBC,KAAtB,EAAkE;AAC9DF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACH;;AAED,WAASC,WAAT,CAAqBN,MAArB,EAAqCD,cAArC,EAAqE;AACjE,QAAIQ,GAAG,GAAG,EAAV;;AACA,QAAIP,MAAM,KAAKD,cAAf,EAA+B;AAC3BQ,MAAAA,GAAG,GAAG,IAAN;AACH,KAFD,MAEO;AACHA,MAAAA,GAAG,GAAG,GAAN;AACH;;AACD,WAAOA,GAAP;AACH;;AACD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,WAAW,CAACN,MAAD,EAASD,cAAT,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA1BeD,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\n\nexport function CheckAnswer({\n    expectedAnswer\n}: {\n    expectedAnswer: string;\n}): JSX.Element {\n    const [answer, setAnswer] = useState<string>(\"\");\n\n    function updateAnswer(event: React.ChangeEvent<HTMLInputElement>) {\n        setAnswer(event.target.value);\n    }\n\n    function checkAnswer(answer: string, expectedAnswer: string): string {\n        let ret = \"\";\n        if (answer === expectedAnswer) {\n            ret = \"✔️\";\n        } else {\n            ret = \"❌\";\n        }\n        return ret;\n    }\n    return (\n        <div>\n            <h3>Check Answer</h3>\n            {checkAnswer(answer, expectedAnswer)}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}